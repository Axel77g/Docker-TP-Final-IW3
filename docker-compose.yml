services:
  php:
    build:
      context: .
      dockerfile: Docker/PHP/Dockerfile
    volumes:
      - ./volumes/www:/var/www
    ports:
      - "9000:9000"
    command: /bin/bash setup.sh
    networks:
      - bridge-network
    depends_on:
      - db

  php2:
    build:
      context: .
      dockerfile: Docker/PHP/Dockerfile
    volumes:
      - ./volumes/www2:/var/www
    ports:
      - "9009:9000"
    command: /bin/bash setup.sh
    networks:
      - bridge-network
    depends_on:
      - db

  db:
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    networks:
      - bridge-network
  nginx:
    image: nginx:latest
    ports:
      - "3001:80"
    volumes:
      - ./volumes/www:/var/www
      - ./volumes/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - db
      - traefik
    networks:
      - bridge-network
    labels:
      - "traefik.http.routers.nginx.rule=Host(`nginx.traefik.me`)"
      - "traefik.http.routers.nginx-tls.tls.domains[0].main=nginx.traefik.me"
      - "traefik.http.routers.nginx-tls.tls.domains[0].sans=nginx-*.traefik.me"

  nginx2:
    image: nginx:latest
    volumes:
      - ./volumes/www2:/var/www
      - ./volumes/nginx/default2.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php2
      - db
      - traefik
    ports:
      - "3000:80"
    networks:
      - bridge-network
    labels:
      - "traefik.http.routers.nginx2.rule=Host(`nginx2.traefik.me`)"
      - "traefik.http.routers.nginx2-tls.tls.domains[0].main=nginx2.traefik.me"
      - "traefik.http.routers.nginx2-tls.tls.domains[0].sans=nginx2-*.traefik.me"

  traefik:
    restart: unless-stopped
    image: traefik:v2.0.2
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./volumes/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./volumes/traefik/tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    networks:
      - bridge-network
    depends_on:
      - reverse-proxy-https-helper

  reverse-proxy-https-helper:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik

volumes:
  db_data:
  certs:
networks:
  bridge-network:
    driver: bridge
